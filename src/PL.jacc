// To compile and run this program using jacc and Sun's JDK:
//
//    jacc simpleCalc.jacc
//    javac Calc.java CalcTokens.java
//    java  Calc
//     ... enter arithmetic expressions ... hit EOF to terminate
//

%class     Parser
%interface Tokens
%semantic  String : Interpreter.lexer.yylval
%get       Interpreter.lexer.token
%next      Interpreter.lexer.yylex()


%token '(' ')' CONS ';' ','
%token '+' '-' '*' '/' '=' '>' '<' AND OR
%token '~' NOT

%token SKIP

%token IF THEN ELSE
%token LET IN END
%token WHILE DO
%token FST SND HEAD TAIL LAMDA

%token INTEGER BOOLEAN NIL SKIP FUN

%token ID

%left  '+' '-'
%left  '*' '/'

%%
e : ID
  | v
  | '(' e e ')'
  | e bop e
  | uop e
  | LET ID '=' e IN e END
  | IF e THEN e ELSE e
  | e '=' e
  | e ';' e
  | WHILE e DO e END
  | FST e
  | SND e
  | HEAD e
  | TAIL e
  | '(' e ')'
  ;
 
v : INTEGER
  | BOOLEAN
  | NIL
  | SKIP
  | FUN ID LAMDA e
  | '(' v ',' v ')'
  | v CONS v
  ;

bop : '+'
    | '-'
	| '*'
	| '/'
	| '='
	| '>'
	| '<'
	| AND
	| OR
	| CONS
	| ','
	;

uop : '~'
    | NOT
	;

%%
