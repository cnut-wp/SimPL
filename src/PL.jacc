// To compile and run this program using jacc and Sun's JDK:
//
//    jacc simpleCalc.jacc
//    javac Calc.java CalcTokens.java
//    java  Calc
//     ... enter arithmetic expressions ... hit EOF to terminate
//

%class     Parser
%interface Tokens
%semantic  Object : Interpreter.lexer.yylval
%get       Interpreter.lexer.token
%next      Interpreter.lexer.yylex()

%{
import syntax.*;
%}

%token '(' ')' CONS ';' ','
%token '+' '-' '*' '/' '=' '>' '<' AND OR
%token '~' NOT

%token ASSIGN

%token IF THEN ELSE
%token LET IN END
%token WHILE DO
%token FST SND HEAD TAIL LAMDA

%token INTEGER BOOLEAN NIL SKIP FUN

%token ID

%left  '+' '-'
%left  '*' '/'

%%

prog : expr { System.out.println($1); };

expr : LET ID '=' expr IN  expseq END { $$ = new LetInEnd(new Variable($2),$4,$6);}
	|  expr '+' expr { $$ = new BinaryOperation($1, BinaryOperation.BinaryOperator.plus , $3);} 
	|  expr '-' expr { $$ = new BinaryOperation($1, BinaryOperation.BinaryOperator.minus, $3);}
	|  INTEGER {$$ = new IntValue($1); }
     ;
expseq : expr {$$=$1;};

%%

private void yyerror(String msg) {
	System.out.println(msg);
	System.exit(1);
}